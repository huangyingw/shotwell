From bc26ea644264c85b9355f265b2e0afefe4943986 Mon Sep 17 00:00:00 2001
From: Jens Georg <mail@jensge.org>
Date: Sun, 29 Jan 2017 22:58:22 +0100
Subject: publishing: Use HTTPS everywhere

Signed-off-by: Jens Georg <mail@jensge.org>
diff --git a/plugins/shotwell-publishing-extras/TumblrPublishing.vala b/plugins/shotwell-publishing-extras/TumblrPublishing.vala
index 5e94a6b..3c5cc82 100644
--- a/plugins/shotwell-publishing-extras/TumblrPublishing.vala
+++ b/plugins/shotwell-publishing-extras/TumblrPublishing.vala
@@ -58,7 +58,7 @@ public class TumblrService : Object, Spit.Pluggable, Spit.Publishing.Service {
 namespace Publishing.Tumblr {
 
 internal const string SERVICE_NAME = "Tumblr";
-internal const string ENDPOINT_URL = "http://www.tumblr.com/";
+internal const string ENDPOINT_URL = "https://www.tumblr.com/";
 internal const string API_KEY = "NdXvXQuKVccOsCOj0H4k9HUJcbcjDBYSo2AkaHzXFECHGNuP9k";
 internal const string API_SECRET = "BN0Uoig0MwbeD27OgA0IwYlp3Uvonyfsrl9pf1cnnMj1QoEUvi";
 internal const string ENCODE_RFC_3986_EXTRA = "!*'();:@&=+$,/?%#[] \\";
@@ -869,7 +869,7 @@ internal class AccessTokenFetchTransaction : Transaction {
 
 internal class UserInfoFetchTransaction : Transaction {
     public UserInfoFetchTransaction(Session session) {
-        base.with_uri(session, "http://api.tumblr.com/v2/user/info",
+        base.with_uri(session, "https://api.tumblr.com/v2/user/info",
             Publishing.RESTSupport.HttpMethod.POST);
     }
 }
@@ -900,7 +900,7 @@ internal class UploadTransaction : Publishing.RESTSupport.UploadTransaction {
 
     public UploadTransaction(Session session,Spit.Publishing.Publishable publishable, string blog_url)  {
 		debug("Init upload transaction");
-        base.with_endpoint_url(session, publishable,"http://api.tumblr.com/v2/blog/%s/post".printf(blog_url) );
+        base.with_endpoint_url(session, publishable,"https://api.tumblr.com/v2/blog/%s/post".printf(blog_url) );
         this.session = session;
 
     }
diff --git a/plugins/shotwell-publishing-extras/YandexPublishing.vala b/plugins/shotwell-publishing-extras/YandexPublishing.vala
index 657ef7e..72f8d4e 100644
--- a/plugins/shotwell-publishing-extras/YandexPublishing.vala
+++ b/plugins/shotwell-publishing-extras/YandexPublishing.vala
@@ -23,7 +23,7 @@ public class YandexService : Object, Spit.Pluggable, Spit.Publishing.Service {
         info.translators = Resources.TRANSLATORS;
         info.version = _VERSION;
         info.website_name = _("Visit the Yandex.Fotki web site");
-        info.website_url = "http://fotki.yandex.ru/";
+        info.website_url = "https://fotki.yandex.ru/";
         info.is_license_wordwrapped = false;
         info.license = Resources.LICENSE;
     }
@@ -621,7 +621,7 @@ public class YandexPublisher : Spit.Publishing.Publisher, GLib.Object {
     public void fetch_account_information(string auth_token) {
         session.set_auth_token(auth_token);
 
-        Transaction t = new Transaction.with_url(session, "http://api-fotki.yandex.ru/api/me/");
+        Transaction t = new Transaction.with_url(session, "https://api-fotki.yandex.ru/api/me/");
         t.completed.connect(fetch_account_complete);
         t.network_error.connect(fetch_account_error);
 
@@ -648,7 +648,7 @@ public class YandexPublisher : Spit.Publishing.Publisher, GLib.Object {
     private void start_web_auth() {
         host.set_service_locked(false);
 
-        web_auth_pane = new WebAuthPane(("http://oauth.yandex.ru/authorize?client_id=%s&response_type=token").printf(client_id));
+        web_auth_pane = new WebAuthPane(("https://oauth.yandex.ru/authorize?client_id=%s&response_type=token").printf(client_id));
         web_auth_pane.login_succeeded.connect(web_auth_login_succeeded);
         web_auth_pane.login_failed.connect(web_auth_login_failed);
 
diff --git a/plugins/shotwell-publishing/PicasaPublishing.vala b/plugins/shotwell-publishing/PicasaPublishing.vala
index 20d9d1b..7906c34 100644
--- a/plugins/shotwell-publishing/PicasaPublishing.vala
+++ b/plugins/shotwell-publishing/PicasaPublishing.vala
@@ -63,7 +63,7 @@ public class PicasaPublisher : Publishing.RESTSupport.GooglePublisher {
     public PicasaPublisher(Spit.Publishing.Service service,
         SharingAccount account,
         Spit.Publishing.PluginHost host) {
-        base(service, host, "http://picasaweb.google.com/data/");
+        base(service, host, "https://picasaweb.google.com/data/");
         
         this.publishing_parameters = new PublishingParameters();
         load_parameters_from_configuration_system(publishing_parameters);
@@ -431,7 +431,7 @@ internal class Album {
 
 internal class AlbumDirectoryTransaction :
     Publishing.RESTSupport.GooglePublisher.AuthenticatedTransaction {
-    private const string ENDPOINT_URL = "http://picasaweb.google.com/data/feed/api/user/" +
+    private const string ENDPOINT_URL = "https://picasaweb.google.com/data/feed/api/user/" +
         "default";
 
     public AlbumDirectoryTransaction(Publishing.RESTSupport.GoogleSession session) {
@@ -449,7 +449,7 @@ internal class AlbumDirectoryTransaction :
 
 private class AlbumCreationTransaction :
     Publishing.RESTSupport.GooglePublisher.AuthenticatedTransaction {
-    private const string ENDPOINT_URL = "http://picasaweb.google.com/data/feed/api/user/" +
+    private const string ENDPOINT_URL = "https://picasaweb.google.com/data/feed/api/user/" +
         "default";
     private const string ALBUM_ENTRY_TEMPLATE = "<?xml version='1.0' encoding='utf-8'?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:gphoto='http://schemas.google.com/photos/2007'><title type='text'>%s</title><gphoto:access>%s</gphoto:access><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/photos/2007#album'></category></entry>";
     
diff --git a/plugins/shotwell-publishing/YouTubePublishing.vala b/plugins/shotwell-publishing/YouTubePublishing.vala
index 24a5a85..a7a40ee 100644
--- a/plugins/shotwell-publishing/YouTubePublishing.vala
+++ b/plugins/shotwell-publishing/YouTubePublishing.vala
@@ -103,7 +103,7 @@ private class PublishingParameters {
 public class YouTubePublisher : Publishing.RESTSupport.GooglePublisher {
     private class ChannelDirectoryTransaction :
         Publishing.RESTSupport.GooglePublisher.AuthenticatedTransaction {
-        private const string ENDPOINT_URL = "http://gdata.youtube.com/feeds/users/default";
+        private const string ENDPOINT_URL = "https://gdata.youtube.com/feeds/users/default";
 
         public ChannelDirectoryTransaction(Publishing.RESTSupport.GoogleSession session) {
             base(session, ENDPOINT_URL, Publishing.RESTSupport.HttpMethod.GET);
@@ -517,7 +517,7 @@ internal class PublishingOptionsPane : Spit.Publishing.DialogPane, GLib.Object {
 }
 
 internal class UploadTransaction : Publishing.RESTSupport.GooglePublisher.AuthenticatedTransaction {
-    private const string ENDPOINT_URL = "http://uploads.gdata.youtube.com/feeds/api/users/default/uploads";
+    private const string ENDPOINT_URL = "https://uploads.gdata.youtube.com/feeds/api/users/default/uploads";
     private const string UNLISTED_XML = "<yt:accessControl action='list' permission='denied'/>";
     private const string PRIVATE_XML = "<yt:private/>";
     private const string METADATA_TEMPLATE ="""<?xml version='1.0'?>
